.container-fluid.event
  - if can? :update, @event
    .user.right
      = link_to edit_event_path(@event), class: "light btn-edit" do
        %i.fa.fa-pencil-square-o
      - if can? :destroy, @event
        = link_to event_path(@event), method: :delete, class: "light btn-delete", data: {confirm: "Are you sure you want to delete this event?"} do
          %i.fa.fa-times
  .row
    .col-md-4.col-md-offset-2
      %h1= @event.name
      - if not @event.state.blank?
        %p= "#{@event.city}, #{@event.state}, #{@event.country}"
      - else
        %p= "#{@event.city}, #{@event.country}"
    .col-md-6.top-25
      = link_to @event.url, :target => "_blank" do
        %i.fa.fa-desktop
        =@event.url
        %br
      - if not @event.twitter_name.blank?
        = link_to "https://www.twitter.com/#{@event.twitter_name}", :target => "_blank" do
          %i.fa.fa-twitter
          =@event.twitter_name
          %br
      -if @upcomings.count > 0
        %i.fa.fa-calendar
        Next event:
        = @upcomings.first.name
        = "(#{@upcomings.first.date})"
        %br

  - if @playlists.exists? and (not params["page"] or params["page"] == "1")
    .row.top-50
      %h4.left-15
        Playlists from
        =@event.name

    -@playlists.each do |playlist|
      .row.top-15
        .col-md-12
          %h4= link_to playlist.name, playlist
        -playlist.videos.order("RANDOM()").limit(4).each_slice(4) do |vids|
          - vids.each do |video|
            .col-md-3.playlist_thumbnail
              %span= thumbnail(video, 'video_rating_small', 30)
        -if playlist.videos.count > 4
          %p.left-15=  link_to "View all videos from #{playlist.name}", playlist

  - if not @videos.empty?
    .row.top-50
      %h4.left-15
        Videos recorded at
        =@event.name
    .row.paginate
      = will_paginate @videos, renderer: BootstrapPagination::Rails
    - @videos.each_slice(4) do |vids|
      .row
        .col-md-12
        - vids.each do |video|
          .col-md-3.col-sm-12.col-xs-12
            = thumbnail(video, 'video_rating_small', 30)
    .row.paginate
      = will_paginate @videos, renderer: BootstrapPagination::Rails

      