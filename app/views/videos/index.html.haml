.container
  .row
    .col-md-8.col-md-offset-2
      %h2.center Featured Ignite videos
      %p.center
        IgniteTalks.io contains the best Ignite videos from around the world.
        %span.hidden-sm.hidden-xs
          = link_to "Tell us", new_video_path
          about a great Ignite video!
  %hr
  .row
    .col-md-4.col-sm-12.col-xs-12
      = form_tag videos_path, class: "form-inline", method: :get do
        .input-group
          = text_field_tag :query, params[:query], class: "form-control", id: "search", autocomplete: "off"
          .input-group-btn
            - if params[:query].present?
              = link_to videos_path, class: "btn btn-default" do
                %i.fa.fa-times
            = submit_tag "Search", class: "btn btn-default"
    .col-md-8.right.hidden-sm.hidden-xs
      =link_to videos_path do
        %btn.btn.btn-default.tags#clear-filter
          %i.fa.fa-times
          clear
      =link_to videos_path(sort: "views") do
        %btn.btn.btn-default.tags{:id => "tag_views"}
          %i.fa.fa-youtube-play
          = "views"
      =link_to videos_path(sort: "likes") do
        %btn.btn.btn-default.tags{:id => "tag_likes"}
          %i.fa.fa-thumbs-o-up
          = "likes"
      - @tags.each do |tag|
        =link_to videos_path(tag: tag.name) do
          %btn.btn.btn-default.tags{:id => "tag_" + tag.name}= tag.name.titleize
  .row.top-50
    - @videos.each do |video|
      .col-md-6
        = thumbnail(video, 'video_rating_large')
        %h4.title= link_to truncate(video.title, length: 60), video
        %p.subtitle
          -if not video.speaker_name.blank?
            - if not video.speaker_url.blank?
              = link_to video.speaker_name, video.speaker_url
            - else
              = "#{video.speaker_name}"
          at
          = link_to video.event.name, event_page_path(video.event)

        %hr
  .row.paginate
    = will_paginate @videos, renderer: BootstrapPagination::Rails
%hr